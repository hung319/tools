#!/bin/bash

# ==============================================================================
# Script t·ª± ƒë·ªông x√¢y d·ª±ng PGroonga v√† ph·ª• thu·ªôc cho Debian (non-root)
#
# Phi√™n b·∫£n cu·ªëi c√πng:
#   - T·ª± ƒë·ªông t√¨m ki·∫øm file 'pg_config'.
#   - C√†i ƒë·∫∑t v√†o th∆∞ m·ª•c chu·∫©n $HOME/.local.
#   - L∆∞u m√£ ngu·ªìn v√†o $HOME/src.
#   - T·ª± ƒë·ªông th√™m bi·∫øn m√¥i tr∆∞·ªùng v√†o ~/.bashrc n·∫øu ch∆∞a c√≥.
# ==============================================================================

# D·ª´ng script ngay l·∫≠p t·ª©c n·∫øu c√≥ l·ªói
set -e

# --- C·∫§U H√åNH ---
GROONGA_VERSION="14.0.5"
PGROONGA_VERSION="3.2.0"
INSTALL_DIR="$HOME/.local"
SRC_DIR="$HOME/src"
NUM_CORES=$(nproc 2>/dev/null || echo 1)

# --- C√ÅC H√ÄM CH·ª®C NƒÇNG ---

# H√†m t√¨m ki·∫øm pg_config
find_pg_config() {
    echo "--- B∆∞·ªõc 1: T√¨m ki·∫øm 'pg_config' ---"
    local found_path=""

    if command -v pg_config &> /dev/null; then
        found_path=$(command -v pg_config)
        echo "‚úÖ ƒê√£ t√¨m th·∫•y 'pg_config' trong PATH c·ªßa b·∫°n: $found_path"
    fi

    if [ -z "$found_path" ]; then
        echo "Kh√¥ng t√¨m th·∫•y trong PATH. ƒêang qu√©t c√°c th∆∞ m·ª•c c·ª•c b·ªô..."
        found_path=$(find "$HOME" -maxdepth 4 -type f -name pg_config -executable 2>/dev/null | head -n 1)
        if [ -n "$found_path" ]; then
            echo "‚úÖ ƒê√£ t√¨m th·∫•y 'pg_config' t·∫°i: $found_path"
        fi
    fi
    
    if [ -z "$found_path" ]; then
        echo "‚ö†Ô∏è Kh√¥ng th·ªÉ t·ª± ƒë·ªông t√¨m th·∫•y 'pg_config'."
        read -p "=> Vui l√≤ng nh·∫≠p ƒë∆∞·ªùng d·∫´n ƒë·∫ßy ƒë·ªß ƒë·∫øn file 'pg_config' c·ªßa b·∫°n: " found_path
    fi

    if [ -z "$found_path" ] || [ ! -x "$found_path" ]; then
        echo "L·ªñI: ƒê∆∞·ªùng d·∫´n 'pg_config' kh√¥ng h·ª£p l·ªá ho·∫∑c kh√¥ng t·ªìn t·∫°i."
        exit 1
    fi

    if [[ "$found_path" == /usr/* ]]; then
        echo "------------------------------------------------------------------------------"
        echo "!!! C·∫¢NH B√ÅO !!!"
        echo "ƒê∆∞·ªùng d·∫´n '$found_path' c√≥ v·∫ª thu·ªôc v·ªÅ m·ªôt b·∫£n c√†i ƒë·∫∑t to√†n h·ªá th·ªëng (b·∫±ng apt)."
        echo "Qu√° tr√¨nh build g·∫ßn nh∆∞ ch·∫Øc ch·∫Øn s·∫Ω th·∫•t b·∫°i do thi·∫øu quy·ªÅn ghi."
        read -p "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ti·∫øp t·ª•c? (y/N): " confirm
        if [[ ! "$confirm" =~ ^[yY]([eE][sS])?$ ]]; then
            echo "ƒê√£ h·ªßy b·ªè."
            exit 1
        fi
        echo "------------------------------------------------------------------------------"
    fi

    PG_CONFIG_PATH="$found_path"
    echo ""
}

# H√†m t·ª± ƒë·ªông c·∫≠p nh·∫≠t .bashrc
update_bashrc() {
    echo "--- B∆∞·ªõc 5: C·∫≠p nh·∫≠t file ~/.bashrc ---"
    # D√πng m·ªôt chu·ªói comment ƒë·ªôc nh·∫•t ƒë·ªÉ ki·ªÉm tra, tr√°nh th√™m nhi·ªÅu l·∫ßn
    local marker="# C·∫•u h√¨nh cho c√°c ph·∫ßn m·ªÅm c√†i ƒë·∫∑t c·ª•c b·ªô trong .local"
    
    if grep -Fxq "$marker" ~/.bashrc; then
        echo "‚úÖ C·∫•u h√¨nh bi·∫øn m√¥i tr∆∞·ªùng ƒë√£ t·ªìn t·∫°i trong ~/.bashrc. B·ªè qua."
    else
        echo "Th√™m c·∫•u h√¨nh bi·∫øn m√¥i tr∆∞·ªùng v√†o cu·ªëi file ~/.bashrc..."
        # S·ª≠ d·ª•ng cat v√† Here Document (EOF) ƒë·ªÉ th√™m nhi·ªÅu d√≤ng m·ªôt c√°ch an to√†n
        # C√°c bi·∫øn $HOME, $PATH ƒë∆∞·ª£c tho√°t b·∫±ng d·∫•u \ ƒë·ªÉ ch√∫ng ƒë∆∞·ª£c ghi ƒë√∫ng v√†o file
        cat <<EOF >> ~/.bashrc

$marker
export PATH="\$HOME/.local/bin:\$PATH"
export LD_LIBRARY_PATH="\$HOME/.local/lib:\$LD_LIBRARY_PATH"
export PKG_CONFIG_PATH="\$HOME/.local/lib/pkgconfig:\$PKG_CONFIG_PATH"
EOF
        echo "‚úÖ ƒê√£ th√™m th√†nh c√¥ng."
    fi
    echo ""
}

# --- B·∫ÆT ƒê·∫¶U SCRIPT ---

find_pg_config

echo "--- B∆∞·ªõc 2: Thi·∫øt l·∫≠p m√¥i tr∆∞·ªùng v√† t·∫°o th∆∞ m·ª•c ---"
mkdir -p "$SRC_DIR"
mkdir -p "$INSTALL_DIR"
export PATH="$INSTALL_DIR/bin:$PATH"
export LD_LIBRARY_PATH="$INSTALL_DIR/lib:$LD_LIBRARY_PATH"
export PKG_CONFIG_PATH="$INSTALL_DIR/lib/pkgconfig:$PKG_CONFIG_PATH"

echo "Th∆∞ m·ª•c c√†i ƒë·∫∑t: $INSTALL_DIR"
echo "Th∆∞ m·ª•c m√£ ngu·ªìn: $SRC_DIR"
echo ""

echo "--- B∆∞·ªõc 3: T·∫£i v√† c√†i ƒë·∫∑t Groonga v${GROONGA_VERSION} ---"
cd "$SRC_DIR"
if [ ! -f "groonga-${GROONGA_VERSION}.tar.gz" ]; then
    wget "https://packages.groonga.org/source/groonga/groonga-${GROONGA_VERSION}.tar.gz"
fi
rm -rf "groonga-${GROONGA_VERSION}"
tar -zxf "groonga-${GROONGA_VERSION}.tar.gz"
cd "groonga-${GROONGA_VERSION}"
./configure --prefix="$INSTALL_DIR"
make -j"$NUM_CORES"
make install
echo "C√†i ƒë·∫∑t Groonga th√†nh c√¥ng!"
echo ""

echo "--- B∆∞·ªõc 4: T·∫£i v√† c√†i ƒë·∫∑t PGroonga v${PGROONGA_VERSION} ---"
cd "$SRC_DIR"
if [ ! -f "pgroonga-${PGROONGA_VERSION}.tar.gz" ]; then
    wget "https://packages.groonga.org/source/pgroonga/pgroonga-${PGROONGA_VERSION}.tar.gz"
fi
rm -rf "pgroonga-${PGROONGA_VERSION}"
tar -zxf "pgroonga-${PGROONGA_VERSION}.tar.gz"
cd "pgroonga-${PGROONGA_VERSION}"
export PG_CONFIG="$PG_CONFIG_PATH"
make -j"$NUM_CORES"
make install
echo "C√†i ƒë·∫∑t PGroonga th√†nh c√¥ng!"
echo ""

# T·ª± ƒë·ªông c·∫≠p nh·∫≠t bashrc
update_bashrc

# --- H∆Ø·ªöNG D·∫™N SAU C√ÄI ƒê·∫∂T ---

echo "=============================================================================="
echo "‚úÖ X√ÇY D·ª∞NG V√Ä C√ÄI ƒê·∫∂T PGroonga HO√ÄN T·∫§T! ‚úÖ"
echo "=============================================================================="
echo ""
echo "!!! C√ÅC B∆Ø·ªöC TI·∫æP THEO R·∫§T QUAN TR·ªåNG !!!"
echo ""
echo "1. T·∫£i l·∫°i c·∫•u h√¨nh shell."
echo "   Script ƒë√£ t·ª± ƒë·ªông th√™m c√°c bi·∫øn m√¥i tr∆∞·ªùng c·∫ßn thi·∫øt v√†o ~/.bashrc."
echo "   B·∫°n ch·ªâ c·∫ßn ch·∫°y l·ªánh sau ƒë·ªÉ √°p d·ª•ng ngay l·∫≠p t·ª©c:"
echo "   ---------------------------------------------------------------------------"
echo "   source ~/.bashrc"
echo "   ---------------------------------------------------------------------------"
echo "   (Ho·∫∑c b·∫°n c√≥ th·ªÉ ƒë√≥ng v√† m·ªü l·∫°i c·ª≠a s·ªï terminal)."
echo ""
echo "2. Kh·ªüi ƒë·ªông m√°y ch·ªß PostgreSQL."
echo "   QUAN TR·ªåNG: H√£y ch·∫Øc ch·∫Øn b·∫°n kh·ªüi ƒë·ªông PostgreSQL t·ª´ m·ªôt terminal ƒë√£ ƒë∆∞·ª£c"
echo "   t·∫£i l·∫°i c·∫•u h√¨nh ·ªü tr√™n, n·∫øu kh√¥ng PostgreSQL s·∫Ω kh√¥ng t√¨m th·∫•y th∆∞ vi·ªán"
echo "   c·ªßa Groonga (libgroonga.so) v√† kh√¥ng th·ªÉ kh·ªüi ƒë·ªông."
echo ""
echo "3. K√≠ch ho·∫°t extension trong c∆° s·ªü d·ªØ li·ªáu."
echo "   K·∫øt n·ªëi v√†o database c·ªßa b·∫°n b·∫±ng psql v√† ch·∫°y l·ªánh:"
echo ""
echo "   psql ten_database_cua_ban -c 'CREATE EXTENSION pgroonga;'"
echo ""
echo "Ch√∫c m·ª´ng b·∫°n ƒë√£ c√†i ƒë·∫∑t th√†nh c√¥ng! üéâ"
